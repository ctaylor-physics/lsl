name: "Build and Test"
on: [push, pull_request]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['2.7', '3.6', '3.8']
      fail-fast: false
    steps:
      - name: "Software Install - Ubuntu"
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get install -y \
            build-essential \
            ca-certificates \
            coreutils \
            curl \
            git \
            gpg \
            gpgv \
            gzip \
            libboost-python-dev \
            libcfitsio-dev \
            libfftw3-dev \
            libgdbm-dev \
            pkg-config \
            software-properties-common
          sudo add-apt-repository -y ppa:kernsuite/kern-7
          sudo apt-get -q update
          sudo apt-get -y install casacore-dev wcslib-dev
      - name: "Software Install - MacOS"
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          brew install \
            fftw \
            pkg-config
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/checkout@v2
      - name: "Software Install - Python" 
        run: |
          python -m pip install \
            setuptools \
            numpy \
            matplotlib \
            scipy \
            "ephem<4.1.1" \
            jupyterlab \
            jupyter_client \
            nbformat \
            nbconvert \
            coverage
      - if: ${{ matrix.python-version == '2.7' }}
        run: python -m pip install "healpy<1.14.0"
      - if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version != '2.7' }}
        run: python -m pip install python-casacore
      - name: "Software Install - Python, Part 2"
        run: python -m pip install aipy
      - name: "Build and Install"
        run: python -m pip install .
      - name: Test
        run: |
          cd tests
          coverage run --source=../lsl -m unittest discover
      - name: "Upload Coverage"
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          curl https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import # One-time step
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
          curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
          gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
          sha256sum -c codecov.SHA256SUM
          chmod +x codecov
          ./codecov -s tests
